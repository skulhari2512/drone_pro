module.exports=[70406,(e,t,r)=>{t.exports=e.x("next/dist/compiled/@opentelemetry/api",()=>require("next/dist/compiled/@opentelemetry/api"))},39253,(e,t,r)=>{},30057,e=>{"use strict";e.s(["config",()=>p,"default",()=>o,"handler",()=>u]);var t=e.i(26747),r=e.i(90406),a=e.i(44898),i=e.i(62950),n=e.i(39253),l=e.i(7031),s=e.i(81927);let o=(0,i.hoist)(n,"default"),p=(0,i.hoist)(n,"config"),d=new a.PagesAPIRouteModule({definition:{kind:r.RouteKind.PAGES_API,page:"/api/email",pathname:"/api/email",bundlePath:"",filename:""},userland:n,distDir:".next",relativeProjectDir:""});async function u(e,r,a){let i="/api/email";i=i.replace(/\/index$/,"")||"/";let n=await d.prepare(e,r,{srcPage:i});if(!n){r.statusCode=400,r.end("Bad Request"),null==a.waitUntil||a.waitUntil.call(a,Promise.resolve());return}let{query:o,params:p,prerenderManifest:u,routerServerContext:c}=n;try{let t=e.method||"GET",a=(0,l.getTracer)(),i=a.getActiveScopeSpan(),n=d.instrumentationOnRequestError.bind(d),m=async i=>d.render(e,r,{query:{...o,...p},params:p,allowedRevalidateHeaderKeys:[],multiZoneDraftMode:!1,trustHostHeader:!1,previewProps:u.preview,propagateError:!1,dev:d.isDev,page:"/api/email",internalRevalidate:null==c?void 0:c.revalidate,onError:(...t)=>n(e,...t)}).finally(()=>{if(!i)return;i.setAttributes({"http.status_code":r.statusCode,"next.rsc":!1});let n=a.getRootSpanAttributes();if(!n)return;if(n.get("next.span_type")!==s.BaseServerSpan.handleRequest)return void console.warn(`Unexpected root span type '${n.get("next.span_type")}'. Please report this Next.js issue https://github.com/vercel/next.js`);let l=n.get("next.route");if(l){let e=`${t} ${l}`;i.setAttributes({"next.route":l,"http.route":l,"next.span_name":e}),i.updateName(e)}else i.updateName(`${t} ${e.url}`)});i?await m(i):await a.withPropagatedContext(e.headers,()=>a.trace(s.BaseServerSpan.handleRequest,{spanName:`${t} ${e.url}`,kind:l.SpanKind.SERVER,attributes:{"http.method":t,"http.target":e.url}},m))}catch(e){if(d.isDev)throw e;(0,t.sendError)(r,500,"Internal Server Error")}finally{null==a.waitUntil||a.waitUntil.call(a,Promise.resolve())}}}];

//# sourceMappingURL=%5Broot-of-the-server%5D__53b176d8._.js.map