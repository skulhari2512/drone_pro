{"version":3,"sources":["turbopack:///[project]/lib/supabase.js","turbopack:///[project]/node_modules/next/dist/esm/build/templates/pages-api.js","turbopack:///[project]/lib/email.js","turbopack:///[project]/pages/api/contact.js"],"sourcesContent":["import { createClient } from '@supabase/supabase-js';\n\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;\nconst supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY;\n\nif (!supabaseUrl || !supabaseAnonKey) {\n  throw new Error('Missing Supabase environment variables');\n}\n\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey);","import { sendError } from \"next/dist/esm/server/api-utils\";\nimport { RouteKind } from \"next/dist/esm/server/route-kind\";\nimport { PagesAPIRouteModule } from \"next/dist/esm/server/route-modules/pages-api/module.compiled\";\nimport { hoist } from \"next/dist/esm/build/templates/helpers\";\n// Import the userland code.\nimport * as userland from \"INNER_PAGE\";\nimport { getTracer, SpanKind } from \"next/dist/esm/server/lib/trace/tracer\";\nimport { BaseServerSpan } from \"next/dist/esm/server/lib/trace/constants\";\n// Re-export the handler (should be the default export).\nexport default hoist(userland, 'default');\n// Re-export config.\nexport const config = hoist(userland, 'config');\n// Create and export the route module that will be consumed.\nconst routeModule = new PagesAPIRouteModule({\n    definition: {\n        kind: RouteKind.PAGES_API,\n        page: \"/api/contact\",\n        pathname: \"/api/contact\",\n        // The following aren't used in production.\n        bundlePath: '',\n        filename: ''\n    },\n    userland,\n    distDir: process.env.__NEXT_RELATIVE_DIST_DIR || '',\n    relativeProjectDir: process.env.__NEXT_RELATIVE_PROJECT_DIR || ''\n});\nexport async function handler(req, res, ctx) {\n    let srcPage = \"/api/contact\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (process.env.TURBOPACK) {\n        srcPage = srcPage.replace(/\\/index$/, '') || '/';\n    }\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return;\n    }\n    const { query, params, prerenderManifest, routerServerContext } = prepareResult;\n    try {\n        const method = req.method || 'GET';\n        const tracer = getTracer();\n        const activeSpan = tracer.getActiveScopeSpan();\n        const onRequestError = routeModule.instrumentationOnRequestError.bind(routeModule);\n        const invokeRouteModule = async (span)=>routeModule.render(req, res, {\n                query: {\n                    ...query,\n                    ...params\n                },\n                params,\n                allowedRevalidateHeaderKeys: process.env.__NEXT_ALLOWED_REVALIDATE_HEADERS,\n                multiZoneDraftMode: Boolean(process.env.__NEXT_MULTI_ZONE_DRAFT_MODE),\n                trustHostHeader: process.env.__NEXT_TRUST_HOST_HEADER,\n                // TODO: get this from from runtime env so manifest\n                // doesn't need to load\n                previewProps: prerenderManifest.preview,\n                propagateError: false,\n                dev: routeModule.isDev,\n                page: \"/api/contact\",\n                internalRevalidate: routerServerContext == null ? void 0 : routerServerContext.revalidate,\n                onError: (...args)=>onRequestError(req, ...args)\n            }).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await invokeRouteModule(activeSpan);\n        } else {\n            await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, invokeRouteModule));\n        }\n    } catch (err) {\n        // we re-throw in dev to show the error overlay\n        if (routeModule.isDev) {\n            throw err;\n        }\n        // this is technically an invariant as error handling\n        // should be done inside of api-resolver onError\n        sendError(res, 500, 'Internal Server Error');\n    } finally{\n        // We don't allow any waitUntil work in pages API routes currently\n        // so if callback is present return with resolved promise since no\n        // pending work\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n    }\n}\n\n//# sourceMappingURL=pages-api.js.map\n","// email-service.js\nexport const EmailConfig = {\n    admin: process.env.REACT_APP_ADMIN_EMAIL || 'cooper@dronecareerpro.au',\n    contact: process.env.REACT_APP_CONTACT_EMAIL || 'cooper@dronecareerpro.au',\n};\n  \n// Helper function to call the send-email edge function\nconst callEmailFunction = async (type, data) => {\n  const apiUrl = `${process.env.REACT_APP_SUPABASE_URL}/functions/v1/resend-email`;\n\n  // Prepare email content based on type\n  let emailData;\n  if (type === 'contact') {\n    emailData = {\n      from: 'onboarding@dronecareerpro.com', // Should be a verified domain in Resend\n      to: EmailConfig.admin,\n      subject: `New Contact Form Submission from ${data.name}`,\n      html: `\n        <h2>New Contact Form Submission</h2>\n        <p><strong>Name:</strong> ${data.name}</p>\n        <p><strong>Email:</strong> ${data.email}</p>\n        <p><strong>Phone:</strong> ${data.phone}</p>\n        <p><strong>Inquiry Type:</strong> ${data.inquiry_type || 'Not specified'}</p>\n        <p><strong>Message:</strong></p>\n        <p>${data.message}</p>\n        <hr>\n        <p>Received at: ${new Date().toLocaleString()}</p>\n      `\n    };\n  }\n\n  const response = await fetch(apiUrl, {\n    method: 'POST',\n    headers: {\n      'Authorization': `Bearer ${process.env.REACT_APP_SUPABASE_ANON_KEY}`,\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(emailData)\n  });\n\n  if (!response.ok) {\n    const error = await response.text();\n    console.error('Email function error:', error);\n    throw new Error(error);\n  }\n\n  const result = await response.json();\n  return result;\n};\n\nexport const sendContactEmail = async (params) => {\n  try {\n    const result = await callEmailFunction('contact', params);\n    return result;\n  } catch (error) {\n    console.error('Failed to send contact email:', error);\n    throw error;\n  }\n};","// pages/api/contact.js\nimport { supabase } from '../../lib/supabase';\nimport { sendContactEmail } from '../../lib/email';\n\nexport default async function handler(req, res) {\n    // Only allow POST requests\n    if (req.method !== 'POST') {\n        return res.status(405).json({\n            error: 'Method not allowed',\n            message: 'This endpoint only accepts POST requests'\n        });\n    }\n\n    try {\n        const { name, email, phone, message, inquiryType } = req.body;\n\n        // Validation\n        if (!name || !email || !phone || !message) {\n            return res.status(400).json({\n                error: 'Validation Error',\n                message: 'Please fill in all required fields (Name, Email, Phone, Message).'\n            });\n        }\n\n        // Email validation\n        const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n        if (!emailRegex.test(email)) {\n            return res.status(400).json({\n                error: 'Invalid Email',\n                message: 'Please enter a valid email address.'\n            });\n        }\n\n        // Phone validation (basic)\n        const phoneRegex = /^[\\d\\s\\-\\+\\(\\)]+$/;\n        if (!phoneRegex.test(phone)) {\n            return res.status(400).json({\n                error: 'Invalid Phone',\n                message: 'Please enter a valid phone number.'\n            });\n        }\n\n        // Store in Supabase\n        const { data: contactData, error: dbError } = await supabase\n            .from('contacts')\n            .insert([\n                {\n                    name,\n                    email,\n                    phone,\n                    message,\n                    inquiry_type: inquiryType || 'general',\n                    created_at: new Date().toISOString()\n                }\n            ])\n            .select()\n            .single();\n\n        if (dbError) {\n            console.error('Database error:', dbError);\n            return res.status(500).json({\n                error: 'Database Error',\n                message: 'Failed to save contact information. Please try again.'\n            });\n        }\n\n        // Send email notification (if email service is configured)\n        try {\n            await sendContactEmail({\n                name,\n                email,\n                phone,\n                message,\n                inquiryType\n            });\n        } catch (emailError) {\n            // Log email error but don't fail the request\n            console.error('Email sending failed:', emailError);\n            // You might want to store this in a queue for retry\n        }\n\n        // Return success response\n        return res.status(200).json({\n            success: true,\n            message: 'Thank you for contacting us! We\\'ll get back to you soon.',\n            data: {\n                id: contactData.id,\n                name: contactData.name\n            }\n        });\n\n    } catch (error) {\n        console.error('Contact form submission error:', error);\n        return res.status(500).json({\n            error: 'Server Error',\n            message: 'An unexpected error occurred. Please try again later.'\n        });\n    }\n}\n\n// Configure API route settings\nexport const config = {\n    api: {\n        bodyParser: {\n            sizeLimit: '1mb', // Limit request body size\n        },\n    },\n};"],"names":[],"mappings":"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","ignoreList":[1]}