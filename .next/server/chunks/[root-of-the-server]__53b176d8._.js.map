{"version":3,"sources":["turbopack:///[project]/node_modules/next/dist/src/build/templates/pages-api.ts"],"sourcesContent":["import type { NextApiResponse } from '../../types'\nimport type { IncomingMessage, ServerResponse } from 'node:http'\n\nimport { sendError } from '../../server/api-utils'\nimport { RouteKind } from '../../server/route-kind'\nimport type { Span } from '../../server/lib/trace/tracer'\nimport { PagesAPIRouteModule } from '../../server/route-modules/pages-api/module.compiled'\n\nimport { hoist } from './helpers'\n\n// Import the userland code.\nimport * as userland from 'VAR_USERLAND'\nimport { getTracer, SpanKind } from '../../server/lib/trace/tracer'\nimport { BaseServerSpan } from '../../server/lib/trace/constants'\nimport type { InstrumentationOnRequestError } from '../../server/instrumentation/types'\n\n// Re-export the handler (should be the default export).\nexport default hoist(userland, 'default')\n\n// Re-export config.\nexport const config = hoist(userland, 'config')\n\n// Create and export the route module that will be consumed.\nconst routeModule = new PagesAPIRouteModule({\n  definition: {\n    kind: RouteKind.PAGES_API,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n  },\n  userland,\n  distDir: process.env.__NEXT_RELATIVE_DIST_DIR || '',\n  relativeProjectDir: process.env.__NEXT_RELATIVE_PROJECT_DIR || '',\n})\n\nexport async function handler(\n  req: IncomingMessage,\n  res: ServerResponse,\n  ctx: {\n    waitUntil?: (prom: Promise<void>) => void\n  }\n): Promise<void> {\n  let srcPage = 'VAR_DEFINITION_PAGE'\n\n  // turbopack doesn't normalize `/index` in the page name\n  // so we need to to process dynamic routes properly\n  // TODO: fix turbopack providing differing value from webpack\n  if (process.env.TURBOPACK) {\n    srcPage = srcPage.replace(/\\/index$/, '') || '/'\n  }\n\n  const prepareResult = await routeModule.prepare(req, res, { srcPage })\n\n  if (!prepareResult) {\n    res.statusCode = 400\n    res.end('Bad Request')\n    ctx.waitUntil?.(Promise.resolve())\n    return\n  }\n\n  const { query, params, prerenderManifest, routerServerContext } =\n    prepareResult\n\n  try {\n    const method = req.method || 'GET'\n    const tracer = getTracer()\n\n    const activeSpan = tracer.getActiveScopeSpan()\n    const onRequestError =\n      routeModule.instrumentationOnRequestError.bind(routeModule)\n\n    const invokeRouteModule = async (span?: Span) =>\n      routeModule\n        .render(req, res, {\n          query: {\n            ...query,\n            ...params,\n          },\n          params,\n          allowedRevalidateHeaderKeys: process.env\n            .__NEXT_ALLOWED_REVALIDATE_HEADERS as any as string[],\n          multiZoneDraftMode: Boolean(process.env.__NEXT_MULTI_ZONE_DRAFT_MODE),\n          trustHostHeader: process.env\n            .__NEXT_TRUST_HOST_HEADER as any as boolean,\n          // TODO: get this from from runtime env so manifest\n          // doesn't need to load\n          previewProps: prerenderManifest.preview,\n          propagateError: false,\n          dev: routeModule.isDev,\n          page: 'VAR_DEFINITION_PAGE',\n\n          internalRevalidate: routerServerContext?.revalidate,\n\n          onError: (...args: Parameters<InstrumentationOnRequestError>) =>\n            onRequestError(req, ...args),\n        })\n        .finally(() => {\n          if (!span) return\n\n          span.setAttributes({\n            'http.status_code': res.statusCode,\n            'next.rsc': false,\n          })\n\n          const rootSpanAttributes = tracer.getRootSpanAttributes()\n          // We were unable to get attributes, probably OTEL is not enabled\n          if (!rootSpanAttributes) {\n            return\n          }\n\n          if (\n            rootSpanAttributes.get('next.span_type') !==\n            BaseServerSpan.handleRequest\n          ) {\n            console.warn(\n              `Unexpected root span type '${rootSpanAttributes.get(\n                'next.span_type'\n              )}'. Please report this Next.js issue https://github.com/vercel/next.js`\n            )\n            return\n          }\n\n          const route = rootSpanAttributes.get('next.route')\n          if (route) {\n            const name = `${method} ${route}`\n\n            span.setAttributes({\n              'next.route': route,\n              'http.route': route,\n              'next.span_name': name,\n            })\n            span.updateName(name)\n          } else {\n            span.updateName(`${method} ${req.url}`)\n          }\n        })\n\n    // TODO: activeSpan code path is for when wrapped by\n    // next-server can be removed when this is no longer used\n    if (activeSpan) {\n      await invokeRouteModule(activeSpan)\n    } else {\n      await tracer.withPropagatedContext(req.headers, () =>\n        tracer.trace(\n          BaseServerSpan.handleRequest,\n          {\n            spanName: `${method} ${req.url}`,\n            kind: SpanKind.SERVER,\n            attributes: {\n              'http.method': method,\n              'http.target': req.url,\n            },\n          },\n          invokeRouteModule\n        )\n      )\n    }\n  } catch (err) {\n    // we re-throw in dev to show the error overlay\n    if (routeModule.isDev) {\n      throw err\n    }\n    // this is technically an invariant as error handling\n    // should be done inside of api-resolver onError\n    sendError(res as NextApiResponse, 500, 'Internal Server Error')\n  } finally {\n    // We don't allow any waitUntil work in pages API routes currently\n    // so if callback is present return with resolved promise since no\n    // pending work\n    ctx.waitUntil?.(Promise.resolve())\n  }\n}\n"],"names":["sendError","RouteKind","PagesAPIRouteModule","hoist","userland","getTracer","SpanKind","BaseServerSpan","config","routeModule","definition","kind","PAGES_API","page","pathname","bundlePath","filename","distDir","process","env","__NEXT_RELATIVE_DIST_DIR","relativeProjectDir","__NEXT_RELATIVE_PROJECT_DIR","handler","req","res","ctx","srcPage","TURBOPACK","replace","prepareResult","prepare","statusCode","end","waitUntil","Promise","resolve","query","params","prerenderManifest","routerServerContext","method","tracer","activeSpan","getActiveScopeSpan","onRequestError","instrumentationOnRequestError","bind","invokeRouteModule","span","render","allowedRevalidateHeaderKeys","__NEXT_ALLOWED_REVALIDATE_HEADERS","multiZoneDraftMode","Boolean","__NEXT_MULTI_ZONE_DRAFT_MODE","trustHostHeader","__NEXT_TRUST_HOST_HEADER","previewProps","preview","propagateError","dev","isDev","internalRevalidate","revalidate","onError","args","finally","setAttributes","rootSpanAttributes","getRootSpanAttributes","get","handleRequest","console","warn","route","name","updateName","url","withPropagatedContext","headers","trace","spanName","SERVER","attributes","err"],"mappings":"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","ignoreList":[0]}